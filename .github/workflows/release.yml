# (C) 2025 Alexei Znamensky
# Licensed under the GPL-3.0-or-later license. See LICENSES/GPL-3.0-or-later.txt for details.
# SPDX-FileCopyrightText: 2025 Alexei Znamensky
# SPDX-License-Identifier: GPL-3.0-or-later

name: Semantic Release

permissions: {}  # remove top-level permissions

on:
  workflow_dispatch:
  # push:
  #   branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    concurrency: release
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
      with:
        # persist-credentials: false
        fetch-depth: 0
        ref: ${{ github.head_ref || github.ref_name }}

    - name: Python setup
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry

    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Create build environment
      run: |
        poetry lock
        poetry install --verbose --with dev
        if ! git diff --quiet poetry.lock; then
          git add poetry.lock
          git commit -m "chore: update poetry.lock"
          git push
        fi

    - name: Run linter and tests
      env:
        PYTHONPATH: .
      run: |
        poetry run flake8 -v . --count --show-source --statistics
        poetry run pytest -v --cov

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true

    - name: Create Release
      run: |
        GH_TOKEN=${{ github.token }} poetry run semantic-release --verbose version
        GH_TOKEN=${{ github.token }} poetry run semantic-release --verbose publish
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: asciinwriter-distributions
        path: dist/

  publish-to-pypi:
    name: >-
      Publish Python distribution to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/asciinwriter
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: asciinwriter-distributions
          path: dist/
      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
